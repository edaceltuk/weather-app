{"version":3,"sources":["ApiKey.js","DayCard.jsx","WeekContainer.jsx","App.jsx","index.js"],"names":["module","exports","moment","require","DayCard","reading","newDate","Date","weekday","dt","setTime","iconurl","weather","icon","imgURL","id","className","style","float","padding","height","format","Math","round","main","temp","src","alt","description","WeekContainer","fullData","useState","dailyData","setdailyData","setID","selectedCity","setSelectedCity","745044","323786","311046","750269","cities","getData","weatherURL","apiConfig","apiKey","fetch","then","res","json","data","dailyDatas","list","filter","dt_txt","includes","push","useEffect","class","margin","value","onChange","e","target","paddig","maxWidth","justifyContent","alignItems","map","index","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CACb,OAAU,qC,wLCAVC,EAASC,EAAQ,IA2BNC,EAzBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACTC,EAAU,IAAIC,KACdC,EAAuB,IAAbH,EAAQI,GACxBH,EAAQI,QAAQF,GAEhB,IACMG,EAAU,mCADCN,EAAQO,QAAQ,GAAGC,KAC4B,OAC1DC,EAAM,kBAAcT,EAAQO,QAAQ,GAAGG,GAAjC,WAEZ,OACI,yBAAKC,UAAU,6BAA6BC,MAAO,CAAEC,MAAO,OAAQC,QAAS,OACzE,yBAAKH,UAAU,OAAOC,MAAO,CAAEE,QAAS,GAAIC,OAAQ,SAChD,wBAAIJ,UAAU,cAAcd,EAAOI,GAASe,OAAO,SACnD,uBAAGL,UAAU,cAAcd,EAAOI,GAASe,OAAO,oBAClD,uBAAGL,UAAWF,IACd,4BAAKQ,KAAKC,MAAMlB,EAAQmB,KAAKC,MAA7B,UACA,yBAAKV,GAAG,QAAO,yBAAKA,GAAG,QAAQW,IAAKf,EAASgB,IAAI,kBACjD,yBAAKX,UAAU,aACX,uBAAGA,UAAU,aAAaX,EAAQO,QAAQ,GAAGgB,iBC2ClDC,EA9DO,WAElB,IAAMC,EAAW,GAFO,EAGUC,mBAAS,IAHnB,mBAGjBC,EAHiB,KAGNC,EAHM,OAIJF,mBAAS,UAJL,mBAIjBhB,EAJiB,KAIbmB,EAJa,OAKgBH,mBAAS,iBALzB,mBAKjBI,EALiB,KAKHC,EALG,OAMIL,mBAAS,CAAEM,OAAQ,WAAYC,OAAQ,SAAUC,OAAQ,aAASC,OAAQ,UAN9E,mBAMjBC,EANiB,KAWlBC,GAXkB,KAWR,WACZ,IAAMC,EAAU,6DAAyD5B,EAAzD,+BAAkF6B,IAAUC,QAC5GC,MAAMH,GACDI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAMC,EAAaD,EAAKE,KAAKC,QAAO,SAAAhD,GAAO,OAAIA,EAAQiD,OAAOC,SAAS,eACvEzB,EAAS0B,KAAKN,EAAKE,MACnBnB,EAAakB,QAGzBM,qBAAU,WACNf,OASJ,OACI,yBAAK1B,UAAU,qBACX,wBAAIA,UAAU,uBAAd,mBACA,yBAAK0C,MAAM,OACP,yBAAKA,MAAM,6BACP,8CACA,6BACA,4BAAQzC,MAAO,CAAEE,QAAS,EAAGwC,OAAQ,IAAMC,MAAOzB,EAC9C0B,SAdC,SAACC,GAClB5B,EAAM4B,EAAEC,OAAOH,OACfxB,EAAgBK,EAAOqB,EAAEC,OAAOH,QAChClB,MAYgB,4BAAQzB,MAAO,CAAEE,QAAS,GAAKyC,MAAM,UAArC,uBACA,4BAAQ3C,MAAO,CAAEE,QAAS,GAAKyC,MAAM,UAArC,iBACA,4BAAQ3C,MAAO,CAAEE,QAAS,GAAKyC,MAAM,UAArC,UACA,4BAAQ3C,MAAO,CAAEE,QAAS,GAAKyC,MAAM,UAArC,cACA,4BAAQ3C,MAAO,CAAEE,QAAS,GAAKyC,MAAM,UAArC,WAGR,yBAAK5C,UAAU,kCAAkCC,MAAO,CAAEC,MAAO,OAAQ8C,OAAQ,OAC7E,wBAAIhD,UAAU,wBAAwBmB,EAAtC,OACA,6BACA,yBAAKuB,MAAM,OAAOzC,MAAO,CAAEgD,SAAU,OAAQC,eAAgB,SAAUC,WAAY,WAzCxFnC,EAAUoC,KAAI,SAAC/D,EAASgE,GAAV,OAAoB,kBAAC,EAAD,CAAShE,QAASA,EAASiE,IAAKD,YCAlEE,EARH,WAEV,OACE,yBAAKvD,UAAU,OACb,kBAAC,EAAD,QCHNwD,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.dcd0995a.chunk.js","sourcesContent":["\r\nmodule.exports = {\r\n    'apiKey': '718791996a8addb4a36da9488ec123d3'\r\n}","\r\nimport React from 'react';\r\nvar moment = require('moment');\r\n\r\nconst DayCard = ({ reading }) => {\r\n    const newDate = new Date();\r\n    const weekday = reading.dt * 1000\r\n    newDate.setTime(weekday)\r\n\r\n    const iconcode = reading.weather[0].icon;\r\n    const iconurl = \"http://openweathermap.org/img/w/\" + iconcode + \".png\";\r\n    const imgURL = `owf owf-${reading.weather[0].id} owf-5x`\r\n\r\n    return (\r\n        <div className=\"col-sm-12 col-md-5 col-lg \" style={{ float: 'left', padding: '1%' }}>\r\n            <div className=\"card\" style={{ padding: 10, height: '100%' }}>\r\n                <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\r\n                <p className=\"text-muted\">{moment(newDate).format('MMMM Do, h:mm a')}</p>\r\n                <i className={imgURL}></i>\r\n                <h2>{Math.round(reading.main.temp)} °C</h2>\r\n                <div id=\"icon\"><img id=\"wicon\" src={iconurl} alt=\"Weather icon\" /></div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{reading.weather[0].description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayCard;","import React, { useState, useEffect } from 'react';\r\nimport apiConfig from './ApiKey';\r\nimport DayCard from './DayCard'\r\nconst WeekContainer = () => {\r\n\r\n    const fullData = []\r\n    const [dailyData, setdailyData] = useState([])\r\n    const [id, setID] = useState('745044');\r\n    const [selectedCity, setSelectedCity] = useState('İstanbul')\r\n    const [cities, setcities] = useState({ 745044: 'istanbul', 323786: 'Ankara', 311046: 'İzmir', 750269: 'Bursa' })\r\n\r\n    const formatDayCards = () => {\r\n        return dailyData.map((reading, index) => <DayCard reading={reading} key={index} />)\r\n    }\r\n    const getData = () => {\r\n        const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?id=${id}&units=metric&appid=${apiConfig.apiKey}`\r\n        fetch(weatherURL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const dailyDatas = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\r\n                fullData.push(data.list)\r\n                setdailyData(dailyDatas)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setID(e.target.value)\r\n        setSelectedCity(cities[e.target.value])\r\n        getData()\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid  \">\r\n            <h1 className=\"display-5 jumbotron\">5-Day Forecast.</h1>\r\n            <div class='row'>\r\n                <div class='col-lg-2 col-sm col-md-12'>\r\n                    <h5>Şehirler </h5>\r\n                    <hr />\r\n                    <select style={{ padding: 5, margin: 10 }} value={selectedCity}\r\n                        onChange={handleChange}>\r\n                        <option style={{ padding: 5 }} value=\"745044\">Şehir Seçin</option>\r\n                        <option style={{ padding: 5 }} value=\"745044\">İstanbul</option>\r\n                        <option style={{ padding: 5 }} value=\"323786\">Ankara</option>\r\n                        <option style={{ padding: 5 }} value=\"311046\">İzmir</option>\r\n                        <option style={{ padding: 5 }} value=\"750269\">Bursa</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col col-lg-10 col-md-12 col-sm \" style={{ float: 'left', paddig: '3%' }}>\r\n                    <h5 className=\"display-5 text-muted\">{selectedCity},TR</h5>\r\n                    <hr />\r\n                    <div class='row ' style={{ maxWidth: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n                        {formatDayCards()}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default WeekContainer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport WeekContainer from './WeekContainer';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <WeekContainer />\r\n    </div>\r\n  )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}